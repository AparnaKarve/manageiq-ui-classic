-#- @tree = TreeBuilderConfigurationManager.new(:configuration_manager_providers, :configuration_manager_providers_tree, @sb)
- @tree = TreeBuilderGenericObjectDefinition.new(:generic_object_definitions, :generic_object_definitions_tree, @sb)
- return if @display == 'generic_objects'
= miq_accordion_panel(_("Generic Object Classes"), true, "god") do
  %tree_div{'ng-controller' => 'treeViewController as vm'}
    %miq-tree-view{:name       => @tree.name,
                   :data       => "vm.data['#{@tree.name}']",
                   :reselect   => @tree.locals_for_render[:allow_reselect],
                   "ng-init"   => "vm.initData('#{@tree.name}', '#{@tree.locals_for_render[:bs_tree]}', '#{@tree.locals_for_render[:select_node]}')",
                   'on-select' => "vm.nodeSelect(node, '/#{request.parameters[:controller]}/show/10000000000083')",
                   -#'on-select' => "window.href.location = '/generic_object_definition/show/10000000000083'",
                   'selected'  => "vm.selectedNodes['#{@tree.name}']",
                   'persist'   => 'key',
                   'lazy-load' => "(vm.lazyLoad(node, '#{@tree.name}', '/#{request.parameters[:controller]}/tree_autoload'))"}
  -#%generic-object-definition-treeview-component{"record-id"     => @generic_object_definition.try(:id),
  -#                                              "show-list-url" => "/generic_object_definition/show_list",
  -#                                              "show-url"      => "/generic_object_definition/show",}
:javascript
  miq_bootstrap('tree_div', 'ManageIQ.treeView');
  // miq_bootstrap('generic-object-definition-treeview-component');
