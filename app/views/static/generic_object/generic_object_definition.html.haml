%form.form-horizontal{"name"         => "angularForm",
                      "model-copy"   => "vm.modelCopy",
                      "model"        => "vm.genericObjectDefinitionModel",
                      "ng-show"      => "vm.afterGet && vm.tableRendered",
                      "ng-cloak"     => "",
                      "form-changed" => true,
                      "miq-form"     => true}
  .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
    %label.col-md-2.control-label{"for" => "generic_object_definition_name"}
      = _("Name")
    .col-md-8
      %input.form-control{"type"        => "text",
                          "id"          => "generic_object_definition_name",
                          "name"        => "name",
                          "ng-model"    => "vm.genericObjectDefinitionModel.name",
                          "maxlength"   => ViewHelper::MAX_NAME_LEN,
                          "required"    => "",
                          "auto-focus"  => ""}
      %span.help-block{"ng-show" => "angularForm.name.$error.required"}
        = _("Required")
  .form-group{"ng-class" => "{'has-error': angularForm.description.$invalid}"}
    %label.col-md-2.control-label{"for" => "generic_object_definition_description"}
      = _("Description")
    .col-md-8
      %input.form-control{"type"        => "text",
                          "id"          => "generic_object_definition_description",
                          "name"        => "description",
                          "ng-model"    => "vm.genericObjectDefinitionModel.description",
                          "maxlength"   => "#{ViewHelper::MAX_DESC_LEN}",
                          "required"    => ""}
      %span.help-block{"ng-show" => "angularForm.description.$error.required"}
        = _("Required")
  .form-group
    %label.col-md-2.control-label{"for" => "generic_object_definition_attrributes"}
      = _("Attributes")
    .col-md-8
      %generic-object-table-component{"keys"             => "vm.genericObjectDefinitionModel.attribute_names",
                                      "values"           => "vm.genericObjectDefinitionModel.attribute_types",
                                      "key-type"         => "Attribute",
                                      "table-headers"    => "vm.attributeTableHeaders",
                                      "orig-keys-values" => "vm.genericObjectDefinitionModel.properties.attributes",
                                      "table-changed"    => "vm.genericObjectDefinitionModel.attributesTableChanged",
                                      "required-rule"    => "vm.noOfRows > 1",
                                      "new-record"       => "vm.newRecord",
                                      "no-of-rows"       => "vm.genericObjectDefinitionModel.noOfAttributeRows",
                                      "table-rendered"   => "vm.tableRendered",
                                      "unique-property"  => "vm.uniqueProperty('Attributes')",
                                      "angular-form"     => "angularForm",
                                      "value-options"    => "vm.types"}
  .form-group
    %label.col-md-2.control-label{"for" => "generic_object_definition_associations"}
      = _("Associations")
    .col-md-8
      %generic-object-table-component{"keys"             => "vm.genericObjectDefinitionModel.association_names",
                                      "values"           => "vm.genericObjectDefinitionModel.association_classes",
                                      "key-type"         => "Association",
                                      "table-headers"    => "vm.associationTableHeaders",
                                      "orig-keys-values" => "vm.genericObjectDefinitionModel.properties.associations",
                                      "table-changed"    => "vm.genericObjectDefinitionModel.associationsTableChanged",
                                      "required-rule"    => "vm.noOfRows > 1",
                                      "new-record"       => "vm.newRecord",
                                      "no-of-rows"       => "vm.genericObjectDefinitionModel.noOfAssociationRows",
                                      "table-rendered"   => "vm.tableRendered",
                                      "unique-property"  => "vm.uniqueProperty('Associations')",
                                      "angular-form"     => "angularForm",
                                      "value-options"    => "vm.classes"}
  .form-group
    %label.col-md-2.control-label{"for" => "generic_object_definition_methods"}
      = _("Methods")
    .col-md-8
      %generic-object-table-component{"keys"             => "vm.genericObjectDefinitionModel.method_names",
                                      "key-type"         => "Method",
                                      "table-headers"    => "vm.methodTableHeaders",
                                      "orig-keys-values" => "vm.genericObjectDefinitionModel.properties.methods",
                                      "table-changed"    => "vm.genericObjectDefinitionModel.methodsTableChanged",
                                      "required-rule"    => "vm.noOfRows > 1",
                                      "new-record"       => "vm.newRecord",
                                      "no-of-rows"       => "vm.genericObjectDefinitionModel.noOfMethodRows",
                                      "table-rendered"   => "vm.tableRendered",
                                      "unique-property"  => "vm.uniqueProperty('Methods')",
                                      "angular-form"     => "angularForm"}
  %custom-image-component{'picture-url-path' => 'vm.genericObjectDefinitionModel.picture_url_path',
  'new-record' => "vm.newRecord",
  'angular-form' => 'angularForm',
  'picture-url-path' => '{{vm.genericObjectDefinitionModel.picture_url_path}}',
  'picture-uploaded' => 'vm.genericObjectDefinitionModel.pictureUploaded',
  'picture-reset' => 'vm.pictureReset',
  'picture' => 'vm.genericObjectDefinitionModel.picture',}
  -#.form-group{"ng-show" => "vm.newRecord || vm.changeImage"}
  -#  %label.col-md-2.control-label{"for" => "custom_image"}
  -#    = _("Custom Image File")
  -#  .col-md-4
  -#    %input.form-control{"type"        => "file",
  -#                        "class"       => "filestyle",
  -#                        "id"          => "generic_object_definition_image_file",
  -#                        "name"        => "generic_object_definition_image_file",
  -#                        "image-file-upload1" => "",
  -#                        "ng-model"    => "vm.genericObjectDefinitionModel.picture.content"}
  -#    {{vm.imageUploadStatus}}
  -#  .col-md-4
  -#    %miq-button{:name      => t = _("Upload chosen File"),
  -#                :title     => t,
  -#                :alt       => t,
  -#                :enabled   => "true",
  -#                'on-click' => "vm.uploadClicked(angularForm)"}
  -#.form-group{'ng-if' => "vm.genericObjectDefinitionModel.picture_url_path !== '' && vm.imageUploadStatus === '' && !vm.changeImage"}
  -#  %label.col-md-2.control-label{"for" => "custom_image"}
  -#    = _("Current Custom Image File")
  -#  .col-md-4
  -#    %img.form-control{'ng-src' => "{{vm.genericObjectDefinitionModel.picture_url_path}}", :style => "width:100px; height:100px;"}
  -#.form-group{'ng-if' => "vm.genericObjectDefinitionModel.picture_url_path !== '' && vm.imageUploadStatus === '' || vm.changeImage"}
  -#  %label.col-md-2.control-label{"for" => "update_image"}
  -#    = _("Update Current Image")
  -#  .col-md-4
  -#    %input.form-control{"type"      => "checkbox",
  -#                        "id"        => "update_image",
  -#                        "name"      => "update_image",
  -#                        "bs-switch" => "",
  -#                        :data       => {:on_text => _('Yes'), :off_text => _('No'), :size => 'mini'},
  -#                        "ng-model"  => "vm.changeImage"}



  = render :partial => "layouts/angular/generic_form_buttons"


:javascript
  $(":file").filestyle({placeholder: _("No file chosen"), icon: false});
