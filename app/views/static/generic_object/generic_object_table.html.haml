%table.table.datatable.table-striped.table-bordered
  %thead
    %tr
      %th{"ng-repeat" => "header in vm.tableHeaders track by $index"}{{header}}
  %tbody
    %tr{"ng-repeat" => "key in vm.keys track by $index"}
      %td.form-group{"ng-class" => "{'has-error': vm.angularForm['{{vm.keyType}}{{$index}}'].$invalid}"}
        %input.form-control{"type"        => "text",
                            "id"          => "{{vm.keyType}}{{$index}}",
                            "name"        => "{{vm.keyType}}{{$index}}",
                            "ng-required" => "vm.valueOptions && vm.values[$index] || {{vm.requiredRule}}",
                            "ng-model"    => "vm.keys[$index]",
                            "ng-change"   => "vm.tableCellValueChanged(vm.angularForm[vm.keyType+$index])",
                            "ng-pattern"  => "/^[a-z][a-zA-Z_0-9]*[!?]?$/",
                            "title"       => "{{vm.angularForm[vm.keyType+$index].$error.pattern ? vm.invalidKeyName : ''}}",
                            "maxlength"   => "#{ViewHelper::MAX_NAME_LEN}",}
          %span.help-block{"ng-if" => "vm.angularForm[vm.keyType+$index].$error.pattern"}
            %i.fa.fa-exclamation-circle{:style => "color:#cc0000"}
              {{vm.invalidKeyName}}
          %span.help-block{"ng-if" => "vm.angularForm[vm.keyType+$index].$error.duplicateProperty"}
            %i.fa.fa-exclamation-circle{:style => "color:#cc0000"}
              {{vm.dupicatePropertyError[vm.keyType+$index]}}
      %td.form-group{"ng-if" => "vm.valueOptions", :style => "width: 50px", "ng-class" => "{'has-error': vm.angularForm['Value_{{vm.keyType}}{{$index}}'].$invalid}"}
        %select{"name"                        => "Value_{{vm.keyType}}{{$index}}",
                "ng-required"                 => "vm.keys[$index] !== '' || {{vm.requiredRule}}",
                "ng-model"                    => "vm.values[$index]",
                "ng-change"                   => "vm.tableCellValueChanged()",
                "ng-options"                  => "valueOption.id as valueOption.name for valueOption in vm.valueOptions",
                "data-live-search"            => "true",
                "selectpicker-for-select-tag" => "",
                "pf-select"                   => true,}
          %option{"value" => "", "disabled" => ""}
            = "<#{_('Choose')}>"
      %td.form-group{"ng-if" => "!vm.valueOptions", "ng-class" => "{'has-error': vm.angularForm['Value_{{vm.keyType}}{{$index}}'].$invalid}"}
        %input.form-control{"type"        => "text",
                            "id"          => "Value_{{vm.keyType}}{{$index}}",
                            "name"        => "Value_{{vm.keyType}}{{$index}}",
                            "ng-required1" => "vm.valueOptions && vm.values[$index] || {{vm.requiredRule}}",
                            "ng-model"    => "vm.values[$index]",
                            "ng-change1"   => "vm.tableCellValueChanged(vm.angularForm[vm.keyType+$index])",
                            "maxlength"   => "#{ViewHelper::MAX_NAME_LEN}",}
      %td{:align => "center", :style => "width: 50px"}
        %span.input-group-btn
          .btn.btn-default{:alt => t = _("Delete Row"), :title => t, "ng-click" => "vm.deleteRow($index)"}
            %i.fa.fa-minus
      %td{:align => "center", :style => "width: 50px"}
        %span.input-group-btn
          .btn.btn-default{:alt => t = _("Add Row"), :title => t, "ng-click" => "vm.addRow($index, vm.keyType + ($index + 1))", "ng-show" => "$index === vm.noOfRows - 1"}
            %i.fa.fa-plus
